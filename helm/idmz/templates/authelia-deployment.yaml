{{- if .Values.authelia.enabled }}
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ printf "%s-authelia" .Release.Name }}
  namespace: {{ .Release.Namespace | quote }}
spec:
  replicas: {{ .Values.authelia.replicas }}
  selector:
    matchLabels:
      app: authelia
  template:
    metadata:
      annotations:
        checksum/config: {{ include (print $.Template.BasePath "/authelia-configmap.yaml") . | sha256sum }}
        checksum/secret: {{ include (print $.Template.BasePath "/authelia-secret.yaml") . | sha256sum }}
      labels:
        app: authelia
    spec:
      topologySpreadConstraints:
      - maxSkew: 1
        topologyKey: kubernetes.io/hostname
        whenUnsatisfiable: DoNotSchedule
        labelSelector:
          matchLabels:
            app: authelia
      restartPolicy: {{ .Values.authelia.restartPolicy  | quote }}
      {{ if and .Values.rdpgw.enabled .Values.authelia.rdpgwInit }}
      initContainers:
        - name: {{ printf "%s-authelia-init" .Release.Name }}
          image: {{ .Values.authelia.image }}
          imagePullPolicy: {{ .Values.authelia.imagePullPolicy | quote }}
          env:
            - name: RDPGW_OPEN_ID__CLIENT_SECRET
              valueFrom:
                secretKeyRef:
                  name: {{ printf "%s-rdpgw" .Release.Name }}
                  key: rdpgw_open_id__client_secret
            - name: RDPGW_OPEN_ID_DNS_NAME
              value: {{ tpl .Values.rdpgw.dnsName . }}
            - name: RDPGW_OPEN_ID_SESSION_DOMAIN
              value: {{ .Values.global.publicBaseDomain }}
          command:
            - 'sh'
            - '-c'
            - 'sed -e "s:\$RDPGW_OPEN_ID__CLIENT_SECRET:${RDPGW_OPEN_ID__CLIENT_SECRET}:g" -e "s:\$RDPGW_OPEN_ID_DNS_NAME:${RDPGW_OPEN_ID_DNS_NAME}:g" -e "s:\$RDPGW_OPEN_ID_SESSION_DOMAIN:${RDPGW_OPEN_ID_SESSION_DOMAIN}:g" /configuration.yml > /config/configuration.yml'
          volumeMounts:
            - name: {{ printf "%s-authelia-configmap-volume" .Release.Name }}
              mountPath: /configuration.yml
              subPath: configuration.yml
            - name: {{ printf "%s-authelia-emptydir-volume" .Release.Name }}
              mountPath: "/config/"
      {{- end }}
      containers:
        - name: {{ printf "%s-authelia" .Release.Name }}
          image: {{ .Values.authelia.image }}
          imagePullPolicy: {{ .Values.authelia.imagePullPolicy  | quote }}
          env:
            - name: AUTHELIA_JWT_SECRET_FILE
              value: /app/secrets/jwt
            - name: AUTHELIA_STORAGE_ENCRYPTION_KEY_FILE
              value: /app/secrets/storage
            - name: AUTHELIA_AUTHENTICATION_BACKEND_LDAP_PASSWORD_FILE
              value: /app/secrets/ldap
            - name: AUTHELIA_IDENTITY_PROVIDERS_OIDC_ISSUER_PRIVATE_KEY_FILE
              value: /app/secrets/issuer
            - name: AUTHELIA_IDENTITY_PROVIDERS_OIDC_HMAC_SECRET_FILE
              value: /app/secrets/hmac
            {{- if .Values.authelia.secrets.redis }}
            - name: AUTHELIA_SESSION_REDIS_PASSWORD_FILE
              value: /app/secrets/redis
            {{- end }}
            - name: AUTHELIA_AUTHENTICATION_BACKEND_LDAP_USER
              value: {{ tpl .Values.authelia.ldapUser . }}
            - name: AUTHELIA_AUTHENTICATION_BACKEND_LDAP_URL
              value: {{ tpl .Values.authelia.ldapUrl . }}
            - name: AUTHELIA_AUTHENTICATION_BACKEND_LDAP_BASE_DN
              value: {{ tpl .Values.authelia.ldapBaseDn . }}
          ports:
            - name: authelia
              containerPort: 9091
          volumeMounts:
            - name: {{ printf "%s-authelia-secrets-volume" .Release.Name }}
              mountPath: /app/secrets
              readOnly: true
            - name: {{ printf "%s-authelia-emptydir-volume" .Release.Name }}
              mountPath: "/config/"
          startupProbe:
            httpGet:
              path: /api/state
              port: 9091
            initialDelaySeconds: 15
            timeoutSeconds: 5
            periodSeconds: 5
            failureThreshold: 4
          livenessProbe:
            httpGet:
              path: /api/state
              port: 9091
            initialDelaySeconds: 60
            timeoutSeconds: 5
            periodSeconds: 30
            failureThreshold: 2
          readinessProbe:
            httpGet:
              path: /api/state
              port: 9091
            initialDelaySeconds: 15
            timeoutSeconds: 5
            periodSeconds: 5
            failureThreshold: 5
      volumes:
        - name: {{ printf "%s-authelia-configmap-volume" .Release.Name }}
          configMap:
            name: {{ printf "%s-authelia" .Release.Name }}
            items:
            - key: configuration.yml
              path: configuration.yml
        - name: {{ printf "%s-authelia-emptydir-volume" .Release.Name }}
          emptyDir: {}
        - name: {{ printf "%s-authelia-secrets-volume" .Release.Name }}
          secret:
            secretName: {{ printf "%s-authelia" .Release.Name }}
            items:
              - key: authelia_jwt_secret_file
                path: jwt
              - key: authelia_storage_encryption_key_file
                path: storage
              - key: authelia_authentication_backend_ldap_password_file
                path: ldap
              - key: authelia_identity_providers_oidc_issuer_private_key_file
                path: issuer
              - key: authelia_identity_providers_oidc_hmac_secret_file
                path: hmac
              {{- if .Values.authelia.secrets.redis }}
              - key: authelia_session_redis_password_secret_file
                path: redis
              {{- end }}
{{- end }}
